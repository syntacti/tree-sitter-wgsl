{
  "name": "wgsl",
  "word": "ident",
  "rules": {
    "translation_unit": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "REPEAT1",
              "content": {
                "type": "SYMBOL",
                "name": "global_directive"
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "REPEAT1",
              "content": {
                "type": "SYMBOL",
                "name": "global_decl"
              }
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "global_directive": {
      "type": "SYMBOL",
      "name": "enable_directive"
    },
    "global_decl": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "semicolon"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "global_variable_decl"
            },
            {
              "type": "SYMBOL",
              "name": "semicolon"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "global_constant_decl"
            },
            {
              "type": "SYMBOL",
              "name": "semicolon"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "type_alias_decl"
            },
            {
              "type": "SYMBOL",
              "name": "semicolon"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "struct_decl"
        },
        {
          "type": "SYMBOL",
          "name": "function_decl"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "static_assert_statement"
            },
            {
              "type": "SYMBOL",
              "name": "semicolon"
            }
          ]
        }
      ]
    },
    "bool_literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "true"
        },
        {
          "type": "SYMBOL",
          "name": "false"
        }
      ]
    },
    "int_literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "TOKEN",
          "content": {
            "type": "PATTERN",
            "value": "0[xX][0-9a-fA-F]+[iu]?"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "PATTERN",
            "value": "0[iu]?"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "PATTERN",
            "value": "[1-9][0-9]*[iu]?"
          }
        }
      ]
    },
    "float_literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "decimal_float_literal"
        },
        {
          "type": "SYMBOL",
          "name": "hex_float_literal"
        }
      ]
    },
    "decimal_float_literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "TOKEN",
          "content": {
            "type": "PATTERN",
            "value": "[0-9]*\\.[0-9]+([eE][+-]?[0-9]+)?[fh]?"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "PATTERN",
            "value": "[0-9]+\\.[0-9]*([eE][+-]?[0-9]+)?[fh]?"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "PATTERN",
            "value": "[0-9]+[eE][+-]?[0-9]+[fh]?"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "PATTERN",
            "value": "0[fh]"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "PATTERN",
            "value": "[1-9][0-9]*[fh]"
          }
        }
      ]
    },
    "hex_float_literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "TOKEN",
          "content": {
            "type": "PATTERN",
            "value": "0[xX][0-9a-fA-F]*\\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "PATTERN",
            "value": "0[xX][0-9a-fA-F]+\\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "PATTERN",
            "value": "0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?"
          }
        }
      ]
    },
    "const_literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "int_literal"
        },
        {
          "type": "SYMBOL",
          "name": "float_literal"
        },
        {
          "type": "SYMBOL",
          "name": "bool_literal"
        }
      ]
    },
    "attribute": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "attr"
            },
            {
              "type": "SYMBOL",
              "name": "ident"
            },
            {
              "type": "SYMBOL",
              "name": "paren_left"
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "REPEAT1",
                  "content": {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "SYMBOL",
                        "name": "literal_or_ident"
                      },
                      {
                        "type": "SYMBOL",
                        "name": "comma"
                      }
                    ]
                  }
                },
                {
                  "type": "BLANK"
                }
              ]
            },
            {
              "type": "SYMBOL",
              "name": "literal_or_ident"
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "comma"
                },
                {
                  "type": "BLANK"
                }
              ]
            },
            {
              "type": "SYMBOL",
              "name": "paren_right"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "attr"
            },
            {
              "type": "SYMBOL",
              "name": "ident"
            }
          ]
        }
      ]
    },
    "literal_or_ident": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "float_literal"
        },
        {
          "type": "SYMBOL",
          "name": "int_literal"
        },
        {
          "type": "SYMBOL",
          "name": "ident"
        }
      ]
    },
    "array_type_decl": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "array"
        },
        {
          "type": "SYMBOL",
          "name": "less_than"
        },
        {
          "type": "SYMBOL",
          "name": "type_decl"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "comma"
                },
                {
                  "type": "SYMBOL",
                  "name": "element_count_expression"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "greater_than"
        }
      ]
    },
    "element_count_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "additive_expression"
        },
        {
          "type": "SYMBOL",
          "name": "bitwise_expression"
        }
      ]
    },
    "struct_decl": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "struct"
        },
        {
          "type": "SYMBOL",
          "name": "ident"
        },
        {
          "type": "SYMBOL",
          "name": "struct_body_decl"
        }
      ]
    },
    "struct_body_decl": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "brace_left"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "REPEAT1",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "struct_member"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "comma"
                  }
                ]
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "struct_member"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "comma"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "brace_right"
        }
      ]
    },
    "struct_member": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "REPEAT1",
              "content": {
                "type": "SYMBOL",
                "name": "attribute"
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "variable_ident_decl"
        }
      ]
    },
    "address_space": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "function"
        },
        {
          "type": "SYMBOL",
          "name": "private"
        },
        {
          "type": "SYMBOL",
          "name": "workgroup"
        },
        {
          "type": "SYMBOL",
          "name": "uniform"
        },
        {
          "type": "SYMBOL",
          "name": "storage"
        }
      ]
    },
    "texture_sampler_types": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "sampler_type"
        },
        {
          "type": "SYMBOL",
          "name": "depth_texture_type"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "sampled_texture_type"
            },
            {
              "type": "SYMBOL",
              "name": "less_than"
            },
            {
              "type": "SYMBOL",
              "name": "type_decl"
            },
            {
              "type": "SYMBOL",
              "name": "greater_than"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "multisampled_texture_type"
            },
            {
              "type": "SYMBOL",
              "name": "less_than"
            },
            {
              "type": "SYMBOL",
              "name": "type_decl"
            },
            {
              "type": "SYMBOL",
              "name": "greater_than"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "storage_texture_type"
            },
            {
              "type": "SYMBOL",
              "name": "less_than"
            },
            {
              "type": "SYMBOL",
              "name": "texel_format"
            },
            {
              "type": "SYMBOL",
              "name": "comma"
            },
            {
              "type": "SYMBOL",
              "name": "access_mode"
            },
            {
              "type": "SYMBOL",
              "name": "greater_than"
            }
          ]
        }
      ]
    },
    "sampler_type": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "sampler"
        },
        {
          "type": "SYMBOL",
          "name": "sampler_comparison"
        }
      ]
    },
    "sampled_texture_type": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "texture_1d"
        },
        {
          "type": "SYMBOL",
          "name": "texture_2d"
        },
        {
          "type": "SYMBOL",
          "name": "texture_2d_array"
        },
        {
          "type": "SYMBOL",
          "name": "texture_3d"
        },
        {
          "type": "SYMBOL",
          "name": "texture_cube"
        },
        {
          "type": "SYMBOL",
          "name": "texture_cube_array"
        }
      ]
    },
    "multisampled_texture_type": {
      "type": "SYMBOL",
      "name": "texture_multisampled_2d"
    },
    "storage_texture_type": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "texture_storage_1d"
        },
        {
          "type": "SYMBOL",
          "name": "texture_storage_2d"
        },
        {
          "type": "SYMBOL",
          "name": "texture_storage_2d_array"
        },
        {
          "type": "SYMBOL",
          "name": "texture_storage_3d"
        }
      ]
    },
    "depth_texture_type": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "texture_depth_2d"
        },
        {
          "type": "SYMBOL",
          "name": "texture_depth_2d_array"
        },
        {
          "type": "SYMBOL",
          "name": "texture_depth_cube"
        },
        {
          "type": "SYMBOL",
          "name": "texture_depth_cube_array"
        },
        {
          "type": "SYMBOL",
          "name": "texture_depth_multisampled_2d"
        }
      ]
    },
    "type_alias_decl": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "type"
        },
        {
          "type": "SYMBOL",
          "name": "ident"
        },
        {
          "type": "SYMBOL",
          "name": "equal"
        },
        {
          "type": "SYMBOL",
          "name": "type_decl"
        }
      ]
    },
    "type_decl": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "ident"
        },
        {
          "type": "SYMBOL",
          "name": "type_decl_without_ident"
        }
      ]
    },
    "type_decl_without_ident": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "bool"
        },
        {
          "type": "SYMBOL",
          "name": "float32"
        },
        {
          "type": "SYMBOL",
          "name": "float16"
        },
        {
          "type": "SYMBOL",
          "name": "int32"
        },
        {
          "type": "SYMBOL",
          "name": "uint32"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "vec_prefix"
            },
            {
              "type": "SYMBOL",
              "name": "less_than"
            },
            {
              "type": "SYMBOL",
              "name": "type_decl"
            },
            {
              "type": "SYMBOL",
              "name": "greater_than"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "mat_prefix"
            },
            {
              "type": "SYMBOL",
              "name": "less_than"
            },
            {
              "type": "SYMBOL",
              "name": "type_decl"
            },
            {
              "type": "SYMBOL",
              "name": "greater_than"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "pointer"
            },
            {
              "type": "SYMBOL",
              "name": "less_than"
            },
            {
              "type": "SYMBOL",
              "name": "address_space"
            },
            {
              "type": "SYMBOL",
              "name": "comma"
            },
            {
              "type": "SYMBOL",
              "name": "type_decl"
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "comma"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "access_mode"
                    }
                  ]
                },
                {
                  "type": "BLANK"
                }
              ]
            },
            {
              "type": "SYMBOL",
              "name": "greater_than"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "array_type_decl"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "atomic"
            },
            {
              "type": "SYMBOL",
              "name": "less_than"
            },
            {
              "type": "SYMBOL",
              "name": "type_decl"
            },
            {
              "type": "SYMBOL",
              "name": "greater_than"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "texture_sampler_types"
        }
      ]
    },
    "vec_prefix": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "vec2"
        },
        {
          "type": "SYMBOL",
          "name": "vec3"
        },
        {
          "type": "SYMBOL",
          "name": "vec4"
        }
      ]
    },
    "mat_prefix": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "mat2x2"
        },
        {
          "type": "SYMBOL",
          "name": "mat2x3"
        },
        {
          "type": "SYMBOL",
          "name": "mat2x4"
        },
        {
          "type": "SYMBOL",
          "name": "mat3x2"
        },
        {
          "type": "SYMBOL",
          "name": "mat3x3"
        },
        {
          "type": "SYMBOL",
          "name": "mat3x4"
        },
        {
          "type": "SYMBOL",
          "name": "mat4x2"
        },
        {
          "type": "SYMBOL",
          "name": "mat4x3"
        },
        {
          "type": "SYMBOL",
          "name": "mat4x4"
        }
      ]
    },
    "variable_statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "variable_decl"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "variable_decl"
            },
            {
              "type": "SYMBOL",
              "name": "equal"
            },
            {
              "type": "SYMBOL",
              "name": "expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "let"
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "ident"
                },
                {
                  "type": "SYMBOL",
                  "name": "variable_ident_decl"
                }
              ]
            },
            {
              "type": "SYMBOL",
              "name": "equal"
            },
            {
              "type": "SYMBOL",
              "name": "expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "const"
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "ident"
                },
                {
                  "type": "SYMBOL",
                  "name": "variable_ident_decl"
                }
              ]
            },
            {
              "type": "SYMBOL",
              "name": "equal"
            },
            {
              "type": "SYMBOL",
              "name": "expression"
            }
          ]
        }
      ]
    },
    "variable_decl": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "var"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "variable_qualifier"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "ident"
            },
            {
              "type": "SYMBOL",
              "name": "variable_ident_decl"
            }
          ]
        }
      ]
    },
    "variable_ident_decl": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "ident"
        },
        {
          "type": "SYMBOL",
          "name": "colon"
        },
        {
          "type": "SYMBOL",
          "name": "type_decl"
        }
      ]
    },
    "variable_qualifier": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "less_than"
        },
        {
          "type": "SYMBOL",
          "name": "address_space"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "comma"
                },
                {
                  "type": "SYMBOL",
                  "name": "access_mode"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "greater_than"
        }
      ]
    },
    "global_variable_decl": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "REPEAT1",
              "content": {
                "type": "SYMBOL",
                "name": "attribute"
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "variable_decl"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "equal"
                },
                {
                  "type": "SYMBOL",
                  "name": "expression"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "global_constant_decl": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "const"
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "ident"
                },
                {
                  "type": "SYMBOL",
                  "name": "variable_ident_decl"
                }
              ]
            },
            {
              "type": "SYMBOL",
              "name": "equal"
            },
            {
              "type": "SYMBOL",
              "name": "expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "REPEAT1",
                  "content": {
                    "type": "SYMBOL",
                    "name": "attribute"
                  }
                },
                {
                  "type": "BLANK"
                }
              ]
            },
            {
              "type": "SYMBOL",
              "name": "override"
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "ident"
                },
                {
                  "type": "SYMBOL",
                  "name": "variable_ident_decl"
                }
              ]
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "equal"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "expression"
                    }
                  ]
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          ]
        }
      ]
    },
    "primary_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "ident"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "callable"
            },
            {
              "type": "SYMBOL",
              "name": "argument_expression_list"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "const_literal"
        },
        {
          "type": "SYMBOL",
          "name": "paren_expression"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "bitcast"
            },
            {
              "type": "SYMBOL",
              "name": "less_than"
            },
            {
              "type": "SYMBOL",
              "name": "type_decl"
            },
            {
              "type": "SYMBOL",
              "name": "greater_than"
            },
            {
              "type": "SYMBOL",
              "name": "paren_expression"
            }
          ]
        }
      ]
    },
    "callable": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "ident"
        },
        {
          "type": "SYMBOL",
          "name": "type_decl_without_ident"
        },
        {
          "type": "SYMBOL",
          "name": "vec_prefix"
        },
        {
          "type": "SYMBOL",
          "name": "mat_prefix"
        }
      ]
    },
    "paren_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "paren_left"
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        },
        {
          "type": "SYMBOL",
          "name": "paren_right"
        }
      ]
    },
    "argument_expression_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "paren_left"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "REPEAT1",
                      "content": {
                        "type": "SEQ",
                        "members": [
                          {
                            "type": "SYMBOL",
                            "name": "expression"
                          },
                          {
                            "type": "SYMBOL",
                            "name": "comma"
                          }
                        ]
                      }
                    },
                    {
                      "type": "BLANK"
                    }
                  ]
                },
                {
                  "type": "SYMBOL",
                  "name": "expression"
                },
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "comma"
                    },
                    {
                      "type": "BLANK"
                    }
                  ]
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "paren_right"
        }
      ]
    },
    "postfix_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "bracket_left"
            },
            {
              "type": "SYMBOL",
              "name": "expression"
            },
            {
              "type": "SYMBOL",
              "name": "bracket_right"
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "postfix_expression"
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "period"
            },
            {
              "type": "SYMBOL",
              "name": "ident"
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "postfix_expression"
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          ]
        }
      ]
    },
    "unary_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "singular_expression"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "minus"
            },
            {
              "type": "SYMBOL",
              "name": "unary_expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "bang"
            },
            {
              "type": "SYMBOL",
              "name": "unary_expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "tilde"
            },
            {
              "type": "SYMBOL",
              "name": "unary_expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "star"
            },
            {
              "type": "SYMBOL",
              "name": "unary_expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "and"
            },
            {
              "type": "SYMBOL",
              "name": "unary_expression"
            }
          ]
        }
      ]
    },
    "singular_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "primary_expression"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "postfix_expression"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "lhs_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "REPEAT1",
              "content": {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "star"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "and"
                  }
                ]
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "core_lhs_expression"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "postfix_expression"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "core_lhs_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "ident"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "paren_left"
            },
            {
              "type": "SYMBOL",
              "name": "lhs_expression"
            },
            {
              "type": "SYMBOL",
              "name": "paren_right"
            }
          ]
        }
      ]
    },
    "multiplicative_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "unary_expression"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "multiplicative_expression"
            },
            {
              "type": "SYMBOL",
              "name": "star"
            },
            {
              "type": "SYMBOL",
              "name": "unary_expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "multiplicative_expression"
            },
            {
              "type": "SYMBOL",
              "name": "forward_slash"
            },
            {
              "type": "SYMBOL",
              "name": "unary_expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "multiplicative_expression"
            },
            {
              "type": "SYMBOL",
              "name": "modulo"
            },
            {
              "type": "SYMBOL",
              "name": "unary_expression"
            }
          ]
        }
      ]
    },
    "additive_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "multiplicative_expression"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "additive_expression"
            },
            {
              "type": "SYMBOL",
              "name": "plus"
            },
            {
              "type": "SYMBOL",
              "name": "multiplicative_expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "additive_expression"
            },
            {
              "type": "SYMBOL",
              "name": "minus"
            },
            {
              "type": "SYMBOL",
              "name": "multiplicative_expression"
            }
          ]
        }
      ]
    },
    "shift_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "additive_expression"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "unary_expression"
            },
            {
              "type": "SYMBOL",
              "name": "shift_left"
            },
            {
              "type": "SYMBOL",
              "name": "unary_expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "unary_expression"
            },
            {
              "type": "SYMBOL",
              "name": "shift_right"
            },
            {
              "type": "SYMBOL",
              "name": "unary_expression"
            }
          ]
        }
      ]
    },
    "relational_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "shift_expression"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "shift_expression"
            },
            {
              "type": "SYMBOL",
              "name": "less_than"
            },
            {
              "type": "SYMBOL",
              "name": "shift_expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "shift_expression"
            },
            {
              "type": "SYMBOL",
              "name": "greater_than"
            },
            {
              "type": "SYMBOL",
              "name": "shift_expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "shift_expression"
            },
            {
              "type": "SYMBOL",
              "name": "less_than_equal"
            },
            {
              "type": "SYMBOL",
              "name": "shift_expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "shift_expression"
            },
            {
              "type": "SYMBOL",
              "name": "greater_than_equal"
            },
            {
              "type": "SYMBOL",
              "name": "shift_expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "shift_expression"
            },
            {
              "type": "SYMBOL",
              "name": "equal_equal"
            },
            {
              "type": "SYMBOL",
              "name": "shift_expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "shift_expression"
            },
            {
              "type": "SYMBOL",
              "name": "not_equal"
            },
            {
              "type": "SYMBOL",
              "name": "shift_expression"
            }
          ]
        }
      ]
    },
    "short_circuit_and_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "relational_expression"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "short_circuit_and_expression"
            },
            {
              "type": "SYMBOL",
              "name": "and_and"
            },
            {
              "type": "SYMBOL",
              "name": "relational_expression"
            }
          ]
        }
      ]
    },
    "short_circuit_or_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "relational_expression"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "short_circuit_or_expression"
            },
            {
              "type": "SYMBOL",
              "name": "or_or"
            },
            {
              "type": "SYMBOL",
              "name": "relational_expression"
            }
          ]
        }
      ]
    },
    "binary_or_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "unary_expression"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "binary_or_expression"
            },
            {
              "type": "SYMBOL",
              "name": "or"
            },
            {
              "type": "SYMBOL",
              "name": "unary_expression"
            }
          ]
        }
      ]
    },
    "binary_and_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "unary_expression"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "binary_and_expression"
            },
            {
              "type": "SYMBOL",
              "name": "and"
            },
            {
              "type": "SYMBOL",
              "name": "unary_expression"
            }
          ]
        }
      ]
    },
    "binary_xor_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "unary_expression"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "binary_xor_expression"
            },
            {
              "type": "SYMBOL",
              "name": "xor"
            },
            {
              "type": "SYMBOL",
              "name": "unary_expression"
            }
          ]
        }
      ]
    },
    "bitwise_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "binary_and_expression"
            },
            {
              "type": "SYMBOL",
              "name": "and"
            },
            {
              "type": "SYMBOL",
              "name": "unary_expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "binary_or_expression"
            },
            {
              "type": "SYMBOL",
              "name": "or"
            },
            {
              "type": "SYMBOL",
              "name": "unary_expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "binary_xor_expression"
            },
            {
              "type": "SYMBOL",
              "name": "xor"
            },
            {
              "type": "SYMBOL",
              "name": "unary_expression"
            }
          ]
        }
      ]
    },
    "expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "relational_expression"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "short_circuit_or_expression"
            },
            {
              "type": "SYMBOL",
              "name": "or_or"
            },
            {
              "type": "SYMBOL",
              "name": "relational_expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "short_circuit_and_expression"
            },
            {
              "type": "SYMBOL",
              "name": "and_and"
            },
            {
              "type": "SYMBOL",
              "name": "relational_expression"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "bitwise_expression"
        }
      ]
    },
    "compound_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "brace_left"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "REPEAT1",
              "content": {
                "type": "SYMBOL",
                "name": "statement"
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "brace_right"
        }
      ]
    },
    "assignment_statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "lhs_expression"
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "equal"
                },
                {
                  "type": "SYMBOL",
                  "name": "compound_assignment_operator"
                }
              ]
            },
            {
              "type": "SYMBOL",
              "name": "expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "underscore"
            },
            {
              "type": "SYMBOL",
              "name": "equal"
            },
            {
              "type": "SYMBOL",
              "name": "expression"
            }
          ]
        }
      ]
    },
    "compound_assignment_operator": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "plus_equal"
        },
        {
          "type": "SYMBOL",
          "name": "minus_equal"
        },
        {
          "type": "SYMBOL",
          "name": "times_equal"
        },
        {
          "type": "SYMBOL",
          "name": "division_equal"
        },
        {
          "type": "SYMBOL",
          "name": "modulo_equal"
        },
        {
          "type": "SYMBOL",
          "name": "and_equal"
        },
        {
          "type": "SYMBOL",
          "name": "or_equal"
        },
        {
          "type": "SYMBOL",
          "name": "xor_equal"
        },
        {
          "type": "SYMBOL",
          "name": "shift_right_equal"
        },
        {
          "type": "SYMBOL",
          "name": "shift_left_equal"
        }
      ]
    },
    "increment_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "lhs_expression"
        },
        {
          "type": "SYMBOL",
          "name": "plus_plus"
        }
      ]
    },
    "decrement_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "lhs_expression"
        },
        {
          "type": "SYMBOL",
          "name": "minus_minus"
        }
      ]
    },
    "if_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "if"
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        },
        {
          "type": "SYMBOL",
          "name": "compound_statement"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "else"
                },
                {
                  "type": "SYMBOL",
                  "name": "else_statement"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "else_statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "compound_statement"
        },
        {
          "type": "SYMBOL",
          "name": "if_statement"
        }
      ]
    },
    "switch_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "switch"
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        },
        {
          "type": "SYMBOL",
          "name": "brace_left"
        },
        {
          "type": "REPEAT1",
          "content": {
            "type": "SYMBOL",
            "name": "switch_body"
          }
        },
        {
          "type": "SYMBOL",
          "name": "brace_right"
        }
      ]
    },
    "switch_body": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "case"
            },
            {
              "type": "SYMBOL",
              "name": "case_selectors"
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "colon"
                },
                {
                  "type": "BLANK"
                }
              ]
            },
            {
              "type": "SYMBOL",
              "name": "case_compound_statement"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "default"
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "colon"
                },
                {
                  "type": "BLANK"
                }
              ]
            },
            {
              "type": "SYMBOL",
              "name": "case_compound_statement"
            }
          ]
        }
      ]
    },
    "case_selectors": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "expression"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "REPEAT1",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "comma"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "expression"
                  }
                ]
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "comma"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "case_compound_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "brace_left"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "REPEAT1",
              "content": {
                "type": "SYMBOL",
                "name": "statement"
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "fallthrough_statement"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "brace_right"
        }
      ]
    },
    "fallthrough_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "fallthrough"
        },
        {
          "type": "SYMBOL",
          "name": "semicolon"
        }
      ]
    },
    "loop_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "loop"
        },
        {
          "type": "SYMBOL",
          "name": "brace_left"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "REPEAT1",
              "content": {
                "type": "SYMBOL",
                "name": "statement"
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "continuing_statement"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "brace_right"
        }
      ]
    },
    "for_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "for"
        },
        {
          "type": "SYMBOL",
          "name": "paren_left"
        },
        {
          "type": "SYMBOL",
          "name": "for_header"
        },
        {
          "type": "SYMBOL",
          "name": "paren_right"
        },
        {
          "type": "SYMBOL",
          "name": "compound_statement"
        }
      ]
    },
    "for_header": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "for_init"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "semicolon"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "expression"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "semicolon"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "for_update"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "for_init": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "variable_statement"
        },
        {
          "type": "SYMBOL",
          "name": "increment_statement"
        },
        {
          "type": "SYMBOL",
          "name": "decrement_statement"
        },
        {
          "type": "SYMBOL",
          "name": "assignment_statement"
        },
        {
          "type": "SYMBOL",
          "name": "func_call_statement"
        }
      ]
    },
    "for_update": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "increment_statement"
        },
        {
          "type": "SYMBOL",
          "name": "decrement_statement"
        },
        {
          "type": "SYMBOL",
          "name": "assignment_statement"
        },
        {
          "type": "SYMBOL",
          "name": "func_call_statement"
        }
      ]
    },
    "while_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "while"
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        },
        {
          "type": "SYMBOL",
          "name": "compound_statement"
        }
      ]
    },
    "break_statement": {
      "type": "SYMBOL",
      "name": "break"
    },
    "break_if_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "break"
        },
        {
          "type": "SYMBOL",
          "name": "if"
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        },
        {
          "type": "SYMBOL",
          "name": "semicolon"
        }
      ]
    },
    "continue_statement": {
      "type": "SYMBOL",
      "name": "continue"
    },
    "continuing_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "continuing"
        },
        {
          "type": "SYMBOL",
          "name": "continuing_compound_statement"
        }
      ]
    },
    "continuing_compound_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "brace_left"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "REPEAT1",
              "content": {
                "type": "SYMBOL",
                "name": "statement"
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "break_if_statement"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "brace_right"
        }
      ]
    },
    "return_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "return"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "expression"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "func_call_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "ident"
        },
        {
          "type": "SYMBOL",
          "name": "argument_expression_list"
        }
      ]
    },
    "static_assert_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "staticAssert"
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        }
      ]
    },
    "statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "semicolon"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "return_statement"
            },
            {
              "type": "SYMBOL",
              "name": "semicolon"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "if_statement"
        },
        {
          "type": "SYMBOL",
          "name": "switch_statement"
        },
        {
          "type": "SYMBOL",
          "name": "loop_statement"
        },
        {
          "type": "SYMBOL",
          "name": "for_statement"
        },
        {
          "type": "SYMBOL",
          "name": "while_statement"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "func_call_statement"
            },
            {
              "type": "SYMBOL",
              "name": "semicolon"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "variable_statement"
            },
            {
              "type": "SYMBOL",
              "name": "semicolon"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "break_statement"
            },
            {
              "type": "SYMBOL",
              "name": "semicolon"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "continue_statement"
            },
            {
              "type": "SYMBOL",
              "name": "semicolon"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "discard"
            },
            {
              "type": "SYMBOL",
              "name": "semicolon"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "assignment_statement"
            },
            {
              "type": "SYMBOL",
              "name": "semicolon"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "compound_statement"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "increment_statement"
            },
            {
              "type": "SYMBOL",
              "name": "semicolon"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "decrement_statement"
            },
            {
              "type": "SYMBOL",
              "name": "semicolon"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "static_assert_statement"
            },
            {
              "type": "SYMBOL",
              "name": "semicolon"
            }
          ]
        }
      ]
    },
    "function_decl": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "REPEAT1",
              "content": {
                "type": "SYMBOL",
                "name": "attribute"
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "function_header"
        },
        {
          "type": "SYMBOL",
          "name": "compound_statement"
        }
      ]
    },
    "function_header": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "fn"
        },
        {
          "type": "SYMBOL",
          "name": "ident"
        },
        {
          "type": "SYMBOL",
          "name": "paren_left"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "param_list"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "paren_right"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "arrow"
                },
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "REPEAT1",
                      "content": {
                        "type": "SYMBOL",
                        "name": "attribute"
                      }
                    },
                    {
                      "type": "BLANK"
                    }
                  ]
                },
                {
                  "type": "SYMBOL",
                  "name": "type_decl"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "param_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "REPEAT1",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "param"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "comma"
                  }
                ]
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "param"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "comma"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "param": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "REPEAT1",
              "content": {
                "type": "SYMBOL",
                "name": "attribute"
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "variable_ident_decl"
        }
      ]
    },
    "enable_directive": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "enable"
        },
        {
          "type": "SYMBOL",
          "name": "ident"
        },
        {
          "type": "SYMBOL",
          "name": "semicolon"
        }
      ]
    },
    "access_mode": {
      "type": "CHOICE",
      "members": [
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "read"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "write"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "read_write"
          }
        }
      ]
    },
    "texel_format": {
      "type": "CHOICE",
      "members": [
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "rgba8unorm"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "rgba8snorm"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "rgba8uint"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "rgba8sint"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "rgba16uint"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "rgba16sint"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "rgba16float"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "r32uint"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "r32sint"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "r32float"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "rg32uint"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "rg32sint"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "rg32float"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "rgba32uint"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "rgba32sint"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "rgba32float"
          }
        }
      ]
    },
    "array": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "array"
      }
    },
    "atomic": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "atomic"
      }
    },
    "bool": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "bool"
      }
    },
    "float32": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "f32"
      }
    },
    "float16": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "f16"
      }
    },
    "int32": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "i32"
      }
    },
    "mat2x2": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "mat2x2"
      }
    },
    "mat2x3": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "mat2x3"
      }
    },
    "mat2x4": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "mat2x4"
      }
    },
    "mat3x2": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "mat3x2"
      }
    },
    "mat3x3": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "mat3x3"
      }
    },
    "mat3x4": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "mat3x4"
      }
    },
    "mat4x2": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "mat4x2"
      }
    },
    "mat4x3": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "mat4x3"
      }
    },
    "mat4x4": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "mat4x4"
      }
    },
    "override": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "override"
      }
    },
    "pointer": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "ptr"
      }
    },
    "sampler": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "sampler"
      }
    },
    "sampler_comparison": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "sampler_comparison"
      }
    },
    "staticAssert": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "staticAssert"
      }
    },
    "struct": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "struct"
      }
    },
    "texture_1d": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "texture_1d"
      }
    },
    "texture_2d": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "texture_2d"
      }
    },
    "texture_2d_array": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "texture_2d_array"
      }
    },
    "texture_3d": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "texture_3d"
      }
    },
    "texture_cube": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "texture_cube"
      }
    },
    "texture_cube_array": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "texture_cube_array"
      }
    },
    "texture_multisampled_2d": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "texture_multisampled_2d"
      }
    },
    "texture_storage_1d": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "texture_storage_1d"
      }
    },
    "texture_storage_2d": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "texture_storage_2d"
      }
    },
    "texture_storage_2d_array": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "texture_storage_2d_array"
      }
    },
    "texture_storage_3d": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "texture_storage_3d"
      }
    },
    "texture_depth_2d": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "texture_depth_2d"
      }
    },
    "texture_depth_2d_array": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "texture_depth_2d_array"
      }
    },
    "texture_depth_cube": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "texture_depth_cube"
      }
    },
    "texture_depth_cube_array": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "texture_depth_cube_array"
      }
    },
    "texture_depth_multisampled_2d": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "texture_depth_multisampled_2d"
      }
    },
    "uint32": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "u32"
      }
    },
    "vec2": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "vec2"
      }
    },
    "vec3": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "vec3"
      }
    },
    "vec4": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "vec4"
      }
    },
    "bitcast": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "bitcast"
      }
    },
    "break": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "break"
      }
    },
    "case": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "case"
      }
    },
    "const": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "const"
      }
    },
    "continue": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "continue"
      }
    },
    "continuing": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "continuing"
      }
    },
    "default": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "default"
      }
    },
    "discard": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "discard"
      }
    },
    "else": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "else"
      }
    },
    "enable": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "enable"
      }
    },
    "fallthrough": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "fallthrough"
      }
    },
    "false": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "false"
      }
    },
    "fn": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "fn"
      }
    },
    "for": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "for"
      }
    },
    "function": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "function"
      }
    },
    "if": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "if"
      }
    },
    "let": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "let"
      }
    },
    "loop": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "loop"
      }
    },
    "private": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "private"
      }
    },
    "return": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "return"
      }
    },
    "storage": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "storage"
      }
    },
    "switch": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "switch"
      }
    },
    "true": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "true"
      }
    },
    "type": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "type"
      }
    },
    "uniform": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "uniform"
      }
    },
    "var": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "var"
      }
    },
    "while": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "while"
      }
    },
    "workgroup": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "workgroup"
      }
    },
    "and": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "&"
      }
    },
    "and_and": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "&&"
      }
    },
    "arrow": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "->"
      }
    },
    "attr": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "@"
      }
    },
    "forward_slash": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "/"
      }
    },
    "bang": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "!"
      }
    },
    "bracket_left": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "["
      }
    },
    "bracket_right": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "]"
      }
    },
    "brace_left": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "{"
      }
    },
    "brace_right": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "}"
      }
    },
    "colon": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": ":"
      }
    },
    "comma": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": ","
      }
    },
    "equal": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "="
      }
    },
    "equal_equal": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "=="
      }
    },
    "not_equal": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "!="
      }
    },
    "greater_than": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": ">"
      }
    },
    "greater_than_equal": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": ">="
      }
    },
    "shift_right": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": ">>"
      }
    },
    "less_than": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "<"
      }
    },
    "less_than_equal": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "<="
      }
    },
    "shift_left": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "<<"
      }
    },
    "modulo": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "%"
      }
    },
    "minus": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "-"
      }
    },
    "minus_minus": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "--"
      }
    },
    "period": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "."
      }
    },
    "plus": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "+"
      }
    },
    "plus_plus": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "++"
      }
    },
    "or": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "|"
      }
    },
    "or_or": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "||"
      }
    },
    "paren_left": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "("
      }
    },
    "paren_right": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": ")"
      }
    },
    "semicolon": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": ";"
      }
    },
    "star": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "*"
      }
    },
    "tilde": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "~"
      }
    },
    "underscore": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "_"
      }
    },
    "xor": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "^"
      }
    },
    "plus_equal": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "+="
      }
    },
    "minus_equal": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "-="
      }
    },
    "times_equal": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "*="
      }
    },
    "division_equal": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "/="
      }
    },
    "modulo_equal": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "%="
      }
    },
    "and_equal": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "&="
      }
    },
    "or_equal": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "|="
      }
    },
    "xor_equal": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "^="
      }
    },
    "shift_right_equal": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": ">>="
      }
    },
    "shift_left_equal": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "<<="
      }
    },
    "_reserved": {
      "type": "CHOICE",
      "members": [
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "AppendStructuredBuffer"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "BlendState"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "Buffer"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "ByteAddressBuffer"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "CompileShader"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "ComputeShader"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "ConsumeStructuredBuffer"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "DepthStencilState"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "DepthStencilView"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "DomainShader"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "GeometryShader"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "Hullshader"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "InputPatch"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "LineStream"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "NULL"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "OutputPatch"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "PixelShader"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "PointStream"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "RWBuffer"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "RWByteAddressBuffer"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "RWStructuredBuffer"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "RWTexture1D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "RWTexture1DArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "RWTexture2D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "RWTexture2DArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "RWTexture3D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "RasterizerState"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "RenderTargetView"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "SamplerComparisonState"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "SamplerState"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "Self"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "StructuredBuffer"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "Texture1D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "Texture1DArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "Texture2D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "Texture2DArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "Texture2DMS"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "Texture2DMSArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "Texture3D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "TextureCube"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "TextureCubeArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "TriangleStream"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "VertexShader"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "abstract"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "active"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "alignas"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "alignof"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "as"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "asm"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "asm_fragment"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "async"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "atomic_uint"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "attribute"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "auto"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "await"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "become"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "bf16"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "binding_array"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "cast"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "catch"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "cbuffer"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "char"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "class"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "co_await"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "co_return"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "co_yield"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "coherent"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "column_major"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "common"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "compile"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "compile_fragment"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "concept"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "const_cast"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "consteval"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "constexpr"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "constinit"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "crate"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "debugger"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "decltype"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "delete"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "demote"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "demote_to_helper"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "do"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "dword"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "dynamic_cast"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "enum"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "explicit"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "export"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "extends"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "extern"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "external"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "f64"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "filter"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "final"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "finally"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "fixed"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "friend"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "from"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "fvec2"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "fvec3"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "fvec4"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "fxgroup"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "get"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "goto"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "groupshared"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "handle"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "highp"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "hvec2"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "hvec3"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "hvec4"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "i16"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "i64"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "i8"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "iimage1D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "iimage1DArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "iimage2D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "iimage2DArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "iimage2DMS"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "iimage2DMSArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "iimage2DRect"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "iimage3D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "iimageBuffer"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "iimageCube"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "iimageCubeArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "image1D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "image1DArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "image2D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "image2DArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "image2DMS"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "image2DMSArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "image2DRect"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "image3D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "imageBuffer"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "imageCube"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "imageCubeArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "impl"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "implements"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "import"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "inline"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "inout"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "instanceof"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "interface"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "invariant"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "isampler1D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "isampler1DArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "isampler2D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "isampler2DArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "isampler2DMS"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "isampler2DMSArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "isampler2DRect"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "isampler3D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "isamplerBuffer"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "isamplerCube"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "isamplerCubeArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "isubpassInput"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "isubpassInputMS"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "itexture1D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "itexture1DArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "itexture2D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "itexture2DArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "itexture2DMS"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "itexture2DMSArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "itexture2DRect"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "itexture3D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "itextureBuffer"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "itextureCube"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "itextureCubeArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "layout"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "line"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "lineadj"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "lowp"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "macro"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "macro_rules"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "mat"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "match"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "matrix"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "mediump"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "meta"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "mod"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "module"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "move"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "mut"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "mutable"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "namespace"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "new"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "nil"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "noexcept"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "noinline"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "nointerpolation"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "noperspective"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "null"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "nullptr"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "of"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "operator"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "package"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "packoffset"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "partition"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "pass"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "patch"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "pixelfragment"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "point"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "precise"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "precision"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "premerge"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "priv"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "protected"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "pub"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "public"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "readonly"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "ref"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "regardless"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "register"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "reinterpret_cast"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "requires"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "resource"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "restrict"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "row_major"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "samper"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "sampler1D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "sampler1DArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "sampler1DArrayShadow"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "sampler1DShadow"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "sampler2D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "sampler2DArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "sampler2DArrayShadow"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "sampler2DMS"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "sampler2DMSArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "sampler2DRect"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "sampler2DRectShadow"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "sampler2DShadow"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "sampler3D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "sampler3DRect"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "samplerBuffer"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "samplerCube"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "samplerCubeArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "samplerCubeArrayShadow"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "samplerCubeShadow"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "samplerShadow"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "self"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "set"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "shared"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "signed"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "sizeof"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "smooth"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "snorm"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "stateblock"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "stateblock_state"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "static"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "static_assert"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "static_cast"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "std"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "string"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "subpassInput"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "subpassInputMS"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "subroutine"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "super"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "superp"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "target"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "tbuffer"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "technique"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "technique10"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "technique11"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "template"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "texture1D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "texture1DArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "texture2D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "texture2DArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "texture2DMS"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "texture2DMSArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "texture2DRect"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "texture3D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "textureBuffer"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "textureCube"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "textureCubeArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "this"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "thread_local"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "throw"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "trait"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "triangle"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "triangleadj"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "try"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "typedef"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "typeid"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "typename"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "typeof"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "u16"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "u64"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "u8"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "uimage1D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "uimage1DArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "uimage2D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "uimage2DArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "uimage2DMS"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "uimage2DMSArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "uimage2DRect"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "uimage3D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "uimageBuffer"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "uimageCube"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "uimageCubeArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "union"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "unless"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "unorm"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "unsafe"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "unsigned"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "unsized"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "usampler1D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "usampler1DArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "usampler2D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "usampler2DArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "usampler2DMS"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "usampler2DMSArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "usampler2DRect"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "usampler3D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "usamplerBuffer"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "usamplerCube"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "usamplerCubeArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "use"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "using"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "usubpassInput"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "usubpassInputMS"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "utexture1D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "utexture1DArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "utexture2D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "utexture2DArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "utexture2DMS"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "utexture2DMSArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "utexture2DRect"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "utexture3D"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "utextureBuffer"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "utextureCube"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "utextureCubeArray"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "varying"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "vec"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "vector"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "vertexfragment"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "virtual"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "void"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "volatile"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "wchar_t"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "wgsl"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "where"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "with"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "writeonly"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "yield"
          }
        }
      ]
    },
    "ident": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "([_\\p{XID_Start}][\\p{XID_Continue}]+)|([\\p{XID_Start}])"
      }
    },
    "_comment": {
      "type": "SEQ",
      "members": [
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "//"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "PATTERN",
            "value": ".*"
          }
        }
      ]
    },
    "_blankspace": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "[\\u0020\\u0009\\u000a\\u000b\\u000c\\u000d\\u0085\\u200e\\u200f\\u2028\\u2029]"
      }
    }
  },
  "extras": [
    {
      "type": "SYMBOL",
      "name": "_comment"
    },
    {
      "type": "SYMBOL",
      "name": "_block_comment"
    },
    {
      "type": "SYMBOL",
      "name": "_blankspace"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [
    {
      "type": "SYMBOL",
      "name": "_block_comment"
    }
  ],
  "inline": [
    "global_decl",
    "_reserved"
  ],
  "supertypes": []
}

